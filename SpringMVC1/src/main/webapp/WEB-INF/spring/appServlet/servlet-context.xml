<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- FrontController 역할을 하는 DispatcherServlet을 초기화시키는 파일 -->
	<!-- 이 XML 파일은 Spring Framework에서 웹 애플리케이션을 구성하기 위한 설정 파일
		 Spring MVC를 사용하여 웹 애플리케이션을 개발할 때, DispatcherServlet이라는 중앙 서블릿이 요청을 받아서 처리하는데, 
		 이 파일은 바로 그 DispatcherServlet을 설정하는 역할 -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!--  Spring MVC에서 어노테이션 기반의 컨트롤러(예: @Controller)를 활성화합니다. 즉, 개발자가 작성한 컨트롤러를 Spring이 인식하고 처리할 수 있게 해줍니다. -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적 리소스(예: 이미지, 자바스크립트, CSS 파일 등)를 처리합니다. /resources/ 경로 아래에 있는 파일들을 웹에서 사용할 수 있게 해줌. -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 빈(Bean) 설정은 Spring MVC에서 컨트롤러가 반환하는 뷰 이름을 실제 뷰 경로로 변환해 줍니다. 
		 예를 들어, 컨트롤러에서 "home"이라는 뷰 이름을 반환하면, 이 설정에 의해 /WEB-INF/views/home.jsp로 변환되어 해당 JSP 파일을 찾아 렌더링 
		 -->
	<!-- prefix : 접두사, 앞에 오는 친구 / suffix : 접미사, 해당 controller 파일명 뒤에 .jsp 붙음 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Controller가 존재하는 패키지를 스캔하는 코드 
		 >> 패키지명이 바뀌면 반드시 수정해야하는 공간 !!
	-->
	<!-- 
		 base package 기준으로 클래스들을 스캔하여 빈으로 등록한다.
		 base package에 여러개의 패키지를 쓸 수 있다. 
		 com.smhrd.controller의 boardController.java를 스캔하여 
		 안에 있는 board(Model), boardContent(int, Model), boardDelete(int), ewfiarwe(), register(BoardVO)가 
		 빈으로 등록됨. 
	-->
	<context:component-scan base-package="com.smhrd.controller" />
	
	
	
</beans:beans>
