<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smhrd.db.BoardMapper">
<!-- SQL  실행 -->
<!-- 
	jsp/servlet 할 때 사용했던 mybatis에서의 namespace
	: 단순한 식별자 의미만 가지고 있었음! 중복만 안 나게 설정하면 됐음 
	
	Spring에서 사용하는 mybatis에서의 namespace
	: 식별자 + spring이 sql 구문을 찾을 수 있게 도와주는 경로
	: 반드시 !!!!!!!!!! 인터페이스의 이름과 동일하게 작성!
	*** mapper namespace 바꾸지 말자*** 
 -->
	<!-- Spring에서는 반드시 BoardMapper 인터페이스 안쪽에 있는 
	실행해야 하는 메소드명과 BoardMapper.xml 파일의 id값이 일치해야 함  -->
	
	<!-- 추가설명
	resultType : 쿼리문의 결과를 반환할 때 객체의 타입을 지정
	parameterType : parameterType은 BoardVO 객체를 받아 SQL문을 실행할 떄 데이터 형식을 지정
					즉, BoardVO 객체가 전달되면 Mybatis가 이 객체의 속성들을 각각 자리 표시자에 매핑하여 SQL문을 실행함
					=> parameterType 은 SQL 쿼리에 전달되는 데이터의 형식을 지정하며, 이 형식은 실제 뎅터를 담고 있는 객체의 클래스를 가리킴
	 -->
	<select id="boardList" resultType="com.smhrd.model.BoardVO">
		SELECT * FROM BOARD
	</select>
	
	<!-- 글 작성하는 sql문 -->
	<insert id="register" parameterType="com.smhrd.model.BoardVO">
		INSERT INTO BOARD(TITLE, WRITER, CONTENT) 
		values(#{title}, #{writer}, #{content}) <!-- 자리 표시자 : 실제 데이터로 대체되는 자리 -->
	</insert>
	
	
















</mapper>